/* This file was generated by SableCC (http://www.sablecc.org/). */

package lft_2014.compiler_portugol.lexer;

import java.io.*;
import lft_2014.compiler_portugol.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMMENT = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }
    protected Token token;

    protected State state = State.NORMAL;
    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;

    private final StringBuffer text = new StringBuffer();

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {39, 39, 5}, {40, 40, 6}, {41, 41, 7}, {42, 42, 8}, {43, 43, 9}, {44, 44, 10}, {45, 45, 11}, {47, 47, 12}, {48, 57, 13}, {58, 58, 14}, {59, 59, 15}, {60, 60, 16}, {61, 61, 17}, {62, 62, 18}, {91, 91, 19}, {93, 93, 20}, {95, 95, 21}, {97, 97, 22}, {98, 98, 23}, {99, 99, 24}, {100, 100, 25}, {101, 101, 26}, {102, 102, 27}, {103, 104, 23}, {105, 105, 28}, {106, 107, 23}, {108, 108, 29}, {109, 109, 23}, {110, 110, 30}, {111, 111, 31}, {112, 112, 32}, {113, 113, 23}, {114, 114, 33}, {115, 115, 34}, {116, 116, 35}, {117, 117, 23}, {118, 118, 36}, {119, 119, 23}, {120, 120, 37}, {121, 122, 23}, },
            {{9, 13, -2}, {32, 32, 38}, },
            {{9, 32, -3}, },
            {{9, 9, 1}, {10, 10, 39}, {13, 32, -3}, },
            {{9, 32, -3}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{42, 42, 40}, {47, 47, 41}, },
            {{48, 57, 13}, },
            {},
            {},
            {{45, 45, 42}, {61, 61, 43}, {62, 62, 44}, },
            {},
            {{61, 61, 45}, },
            {},
            {},
            {{48, 57, 46}, {65, 90, 47}, {97, 122, 48}, },
            {{48, 57, 49}, {65, 90, 50}, {97, 115, 51}, {116, 116, 52}, {117, 117, 51}, {118, 118, 53}, {119, 122, 51}, },
            {{48, 90, -24}, {97, 122, 51}, },
            {{48, 90, -24}, {97, 97, 54}, {98, 110, 51}, {111, 111, 55}, {112, 122, 51}, },
            {{48, 90, -24}, {97, 100, 51}, {101, 101, 56}, {102, 122, 51}, },
            {{48, 90, -24}, {97, 109, 51}, {110, 110, 57}, {111, 114, 51}, {115, 115, 58}, {116, 122, 51}, },
            {{48, 90, -24}, {97, 97, 59}, {98, 104, 51}, {105, 105, 60}, {106, 122, 51}, },
            {{48, 109, -28}, {110, 110, 61}, {111, 122, 51}, },
            {{48, 100, -27}, {101, 101, 62}, {102, 122, 51}, },
            {{48, 90, -24}, {97, 97, 63}, {98, 122, 51}, },
            {{48, 90, -24}, {97, 116, 51}, {117, 117, 64}, {118, 122, 51}, },
            {{48, 90, -24}, {97, 97, 65}, {98, 113, 51}, {114, 114, 66}, {115, 122, 51}, },
            {{48, 100, -27}, {101, 101, 67}, {102, 122, 51}, },
            {{48, 100, -27}, {101, 101, 68}, {102, 122, 51}, },
            {{48, 90, -24}, {97, 104, 51}, {105, 105, 69}, {106, 122, 51}, },
            {{48, 90, -24}, {97, 97, 70}, {98, 122, 51}, },
            {{48, 90, -24}, {97, 110, 51}, {111, 111, 71}, {112, 122, 51}, },
            {{9, 32, -3}, },
            {{9, 32, -3}, },
            {},
            {{0, 9, 72}, {10, 10, 73}, {11, 12, 72}, {13, 13, 74}, {14, 65535, 72}, },
            {},
            {},
            {},
            {},
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 100, -27}, {101, 101, 75}, {102, 122, 51}, },
            {{48, 90, -24}, {97, 97, 76}, {98, 122, 51}, },
            {{48, 90, -24}, {97, 113, 51}, {114, 114, 77}, {115, 115, 78}, {116, 122, 51}, },
            {{48, 109, -28}, {110, 110, 79}, {111, 122, 51}, },
            {{48, 90, -24}, {97, 98, 51}, {99, 99, 80}, {100, 122, 51}, },
            {{48, 90, -24}, {97, 112, 51}, {113, 113, 81}, {114, 115, 51}, {116, 116, 82}, {117, 122, 51}, },
            {{48, 98, -58}, {99, 99, 83}, {100, 122, 51}, },
            {{48, 98, -58}, {99, 99, 84}, {100, 122, 51}, },
            {{48, 90, -24}, {97, 108, 51}, {109, 109, 85}, {110, 122, 51}, },
            {{48, 104, -37}, {105, 105, 86}, {106, 115, 51}, {116, 116, 87}, {117, 122, 51}, },
            {{48, 104, -37}, {105, 105, 88}, {106, 122, 51}, },
            {{48, 110, -39}, {111, 111, 89}, {112, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 113, -56}, {114, 114, 90}, {115, 115, 91}, {116, 122, 51}, },
            {{48, 110, -39}, {111, 111, 92}, {112, 122, 51}, },
            {{48, 90, -24}, {97, 97, 93}, {98, 111, 51}, {112, 112, 94}, {113, 122, 51}, },
            {{48, 109, -28}, {110, 110, 95}, {111, 122, 51}, },
            {{48, 90, -24}, {97, 111, 51}, {112, 112, 96}, {113, 122, 51}, },
            {{48, 90, -24}, {97, 107, 51}, {108, 108, 97}, {109, 113, 51}, {114, 114, 98}, {115, 122, 51}, },
            {{48, 113, -56}, {114, 114, 99}, {115, 122, 51}, },
            {{0, 65535, -43}, },
            {{0, 12, 73}, {14, 65535, 73}, },
            {{0, 9, 74}, {11, 65535, 74}, },
            {{48, 122, -25}, },
            {{48, 107, -72}, {108, 108, 100}, {109, 122, 51}, },
            {{48, 90, -24}, {97, 97, 101}, {98, 122, 51}, },
            {{48, 110, -39}, {111, 111, 102}, {112, 122, 51}, },
            {{48, 90, -24}, {97, 114, 51}, {115, 115, 103}, {116, 122, 51}, },
            {{48, 107, -72}, {108, 108, 104}, {109, 122, 51}, },
            {{48, 116, -33}, {117, 117, 105}, {118, 122, 51}, },
            {{48, 90, -24}, {97, 97, 106}, {98, 122, 51}, },
            {{48, 113, -56}, {114, 114, 107}, {115, 122, 51}, },
            {{48, 90, -24}, {97, 97, 108}, {98, 122, 51}, },
            {{32, 32, 109}, {46, 46, 110}, {48, 111, -71}, {112, 112, 111}, {113, 122, 51}, },
            {{48, 98, -58}, {99, 99, 112}, {100, 122, 51}, },
            {{48, 100, -27}, {101, 101, 113}, {102, 122, 51}, },
            {{48, 90, -24}, {97, 97, 114}, {98, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 90, -24}, {97, 97, 115}, {98, 122, 51}, },
            {{48, 114, -81}, {115, 115, 116}, {116, 122, 51}, },
            {{48, 90, -24}, {97, 102, 51}, {103, 103, 117}, {104, 122, 51}, },
            {{48, 107, -72}, {108, 108, 118}, {109, 122, 51}, },
            {{48, 104, -37}, {105, 105, 119}, {106, 122, 51}, },
            {{48, 90, -24}, {97, 97, 120}, {98, 122, 51}, },
            {{48, 110, -39}, {111, 111, 121}, {112, 122, 51}, },
            {{48, 110, -39}, {111, 111, 122}, {112, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 104, -37}, {105, 105, 123}, {106, 122, 51}, },
            {{48, 98, -58}, {99, 99, 124}, {100, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 115, -24}, {116, 116, 125}, {117, 122, 51}, },
            {{48, 90, -24}, {97, 97, 126}, {98, 122, 51}, },
            {{48, 90, -24}, {97, 97, 127}, {98, 122, 51}, },
            {{48, 110, -39}, {111, 111, 128}, {112, 122, 51}, },
            {{48, 100, -27}, {101, 101, 129}, {102, 122, 51}, },
            {{48, 122, -25}, },
            {{97, 97, 130}, {101, 101, 131}, {115, 115, 132}, },
            {},
            {{48, 90, -24}, {97, 97, 133}, {98, 122, 51}, },
            {{48, 104, -37}, {105, 105, 134}, {106, 122, 51}, },
            {{48, 104, -37}, {105, 105, 135}, {106, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 110, -39}, {111, 111, 136}, {112, 122, 51}, },
            {{48, 113, -56}, {114, 114, 137}, {115, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 115, -24}, {116, 116, 138}, {117, 122, 51}, },
            {{48, 110, -39}, {111, 111, 139}, {112, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 113, -56}, {114, 114, 140}, {115, 122, 51}, },
            {{48, 100, -27}, {101, 101, 141}, {102, 122, 51}, },
            {{48, 115, -24}, {116, 116, 142}, {117, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 113, -56}, {114, 114, 143}, {115, 122, 51}, },
            {{48, 109, -28}, {110, 110, 144}, {111, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 90, -24}, {97, 117, 51}, {118, 118, 145}, {119, 122, 51}, },
            {{118, 118, 146}, },
            {{110, 110, 147}, },
            {{101, 101, 148}, },
            {{48, 113, -56}, {114, 114, 149}, {115, 122, 51}, },
            {{48, 110, -39}, {111, 111, 150}, {112, 122, 51}, },
            {{48, 113, -56}, {114, 114, 151}, {115, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 90, -24}, {97, 97, 152}, {98, 122, 51}, },
            {{48, 90, -24}, {97, 97, 153}, {98, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 100, -27}, {101, 101, 154}, {102, 122, 51}, },
            {{48, 90, -24}, {97, 97, 155}, {98, 122, 51}, },
            {{48, 115, -24}, {116, 116, 156}, {117, 122, 51}, },
            {{48, 90, -24}, {97, 97, 157}, {98, 122, 51}, },
            {{97, 97, 158}, },
            {{113, 113, 159}, },
            {},
            {{48, 90, -24}, {97, 97, 160}, {98, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 110, -39}, {111, 111, 161}, {112, 122, 51}, },
            {{48, 108, -62}, {109, 109, 162}, {110, 122, 51}, },
            {{48, 122, -25}, },
            {{48, 113, -56}, {114, 114, 163}, {115, 122, 51}, },
            {{48, 98, -58}, {99, 99, 164}, {100, 122, 51}, },
            {{48, 110, -39}, {111, 111, 165}, {112, 122, 51}, },
            {{48, 122, -25}, },
            {{108, 108, 166}, },
            {{117, 117, 167}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 90, -24}, {97, 97, 168}, {98, 122, 51}, },
            {{48, 100, -27}, {101, 101, 169}, {102, 122, 51}, },
            {{48, 90, -24}, {97, 97, 170}, {98, 122, 51}, },
            {{48, 122, -25}, },
            {{105, 105, 171}, },
            {{97, 97, 172}, },
            {{48, 122, -25}, },
            {{48, 122, -25}, },
            {{48, 110, -39}, {111, 111, 173}, {112, 122, 51}, },
            {{101, 101, 174}, },
            {{110, 110, 175}, },
            {{48, 122, -25}, },
            {},
            {{116, 116, 176}, },
            {{111, 111, 177}, },
            {},
        }
        { // COMMENT
            {{0, 8, 1}, {9, 9, 2}, {10, 10, 3}, {11, 12, 1}, {13, 13, 4}, {14, 31, 1}, {32, 32, 5}, {33, 38, 1}, {39, 39, 6}, {40, 40, 7}, {41, 41, 8}, {42, 42, 9}, {43, 43, 10}, {44, 44, 11}, {45, 45, 12}, {46, 46, 1}, {47, 47, 13}, {48, 57, 1}, {58, 58, 14}, {59, 59, 15}, {60, 60, 16}, {61, 61, 17}, {62, 62, 18}, {63, 90, 1}, {91, 91, 19}, {92, 92, 1}, {93, 93, 20}, {94, 96, 1}, {97, 97, 21}, {98, 98, 1}, {99, 99, 22}, {100, 100, 23}, {101, 101, 24}, {102, 102, 25}, {103, 104, 1}, {105, 105, 26}, {106, 107, 1}, {108, 108, 27}, {109, 109, 1}, {110, 110, 28}, {111, 111, 29}, {112, 112, 30}, {113, 113, 1}, {114, 114, 31}, {115, 115, 32}, {116, 117, 1}, {118, 118, 33}, {119, 119, 1}, {120, 120, 34}, {121, 65535, 1}, },
            {{0, 41, 1}, {43, 46, 1}, {48, 65535, 1}, },
            {{0, 31, -2}, {32, 32, 35}, {33, 41, 1}, {43, 65535, -3}, },
            {{0, 65535, -4}, },
            {{0, 9, -2}, {10, 10, 36}, {11, 65535, -4}, },
            {{0, 65535, -4}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{47, 47, 37}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{42, 42, 38}, {47, 47, 39}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 41, 1}, {43, 44, 1}, {45, 45, 40}, {46, 46, 1}, {48, 60, 1}, {61, 61, 41}, {62, 62, 42}, {63, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 60, 1}, {61, 61, 43}, {62, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 115, 1}, {116, 116, 44}, {117, 117, 1}, {118, 118, 45}, {119, 65535, 1}, },
            {{0, 46, -3}, {48, 96, 1}, {97, 97, 46}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 100, 1}, {101, 101, 47}, {102, 65535, 1}, },
            {{0, 46, -3}, {48, 109, 1}, {110, 110, 48}, {111, 114, 1}, {115, 115, 49}, {116, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 50}, {98, 104, 1}, {105, 105, 51}, {106, 65535, 1}, },
            {{0, 109, -26}, {110, 110, 52}, {111, 65535, 1}, },
            {{0, 100, -25}, {101, 101, 53}, {102, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 54}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 116, 1}, {117, 117, 55}, {118, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 56}, {98, 65535, 1}, },
            {{0, 100, -25}, {101, 101, 57}, {102, 65535, 1}, },
            {{0, 100, -25}, {101, 101, 58}, {102, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 59}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 110, 1}, {111, 111, 60}, {112, 65535, 1}, },
            {{0, 65535, -4}, },
            {{0, 65535, -4}, },
            {},
            {},
            {{0, 9, 61}, {10, 10, 62}, {11, 12, 61}, {13, 13, 63}, {14, 65535, 61}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 100, -25}, {101, 101, 64}, {102, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 65}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 113, 1}, {114, 114, 66}, {115, 115, 67}, {116, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 112, 1}, {113, 113, 68}, {114, 115, 1}, {116, 116, 69}, {117, 65535, 1}, },
            {{0, 46, -3}, {48, 98, 1}, {99, 99, 70}, {100, 65535, 1}, },
            {{0, 98, -51}, {99, 99, 71}, {100, 65535, 1}, },
            {{0, 46, -3}, {48, 108, 1}, {109, 109, 72}, {110, 65535, 1}, },
            {{0, 115, -23}, {116, 116, 73}, {117, 65535, 1}, },
            {{0, 46, -3}, {48, 104, 1}, {105, 105, 74}, {106, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 75}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 113, -48}, {114, 114, 76}, {115, 115, 77}, {116, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 78}, {98, 111, 1}, {112, 112, 79}, {113, 65535, 1}, },
            {{0, 109, -26}, {110, 110, 80}, {111, 65535, 1}, },
            {{0, 46, -3}, {48, 107, 1}, {108, 108, 81}, {109, 65535, 1}, },
            {{0, 113, -48}, {114, 114, 82}, {115, 65535, 1}, },
            {{0, 65535, -41}, },
            {{0, 12, 62}, {14, 65535, 62}, },
            {{0, 9, 63}, {11, 65535, 63}, },
            {{0, 65535, -3}, },
            {{0, 107, -61}, {108, 108, 83}, {109, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 84}, {98, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 85}, {112, 65535, 1}, },
            {{0, 116, -31}, {117, 117, 86}, {118, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 87}, {98, 65535, 1}, },
            {{0, 113, -48}, {114, 114, 88}, {115, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 89}, {98, 65535, 1}, },
            {{0, 31, 1}, {32, 32, 90}, {33, 46, -4}, {48, 111, 1}, {112, 112, 91}, {113, 65535, 1}, },
            {{0, 100, -25}, {101, 101, 92}, {102, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 93}, {98, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 96, -24}, {97, 97, 94}, {98, 65535, 1}, },
            {{0, 46, -3}, {48, 114, 1}, {115, 115, 95}, {116, 65535, 1}, },
            {{0, 107, -61}, {108, 108, 96}, {109, 65535, 1}, },
            {{0, 104, -55}, {105, 105, 97}, {106, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 98}, {98, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 99}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 104, -55}, {105, 105, 100}, {106, 65535, 1}, },
            {{0, 98, -51}, {99, 99, 101}, {100, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 96, -24}, {97, 97, 102}, {98, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 103}, {112, 65535, 1}, },
            {{0, 100, -25}, {101, 101, 104}, {102, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 96, -24}, {97, 97, 105}, {98, 100, 1}, {101, 101, 106}, {102, 114, 1}, {115, 115, 107}, {116, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 108}, {98, 65535, 1}, },
            {{0, 104, -55}, {105, 105, 109}, {106, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 110, -36}, {111, 111, 110}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 115, -23}, {116, 116, 111}, {117, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 112}, {112, 65535, 1}, },
            {{0, 113, -48}, {114, 114, 113}, {115, 65535, 1}, },
            {{0, 100, -25}, {101, 101, 114}, {102, 65535, 1}, },
            {{0, 115, -23}, {116, 116, 115}, {117, 65535, 1}, },
            {{0, 109, -26}, {110, 110, 116}, {111, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 46, -3}, {48, 117, 1}, {118, 118, 117}, {119, 65535, 1}, },
            {{0, 117, -106}, {118, 118, 118}, {119, 65535, 1}, },
            {{0, 109, -26}, {110, 110, 119}, {111, 65535, 1}, },
            {{0, 100, -25}, {101, 101, 120}, {102, 65535, 1}, },
            {{0, 113, -48}, {114, 114, 121}, {115, 65535, 1}, },
            {{0, 113, -48}, {114, 114, 122}, {115, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 96, -24}, {97, 97, 123}, {98, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 100, -25}, {101, 101, 124}, {102, 65535, 1}, },
            {{0, 115, -23}, {116, 116, 125}, {117, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 126}, {98, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 127}, {98, 65535, 1}, },
            {{0, 112, -50}, {113, 113, 128}, {114, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 96, -24}, {97, 97, 129}, {98, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 130}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 113, -48}, {114, 114, 131}, {115, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 132}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 107, -61}, {108, 108, 133}, {109, 65535, 1}, },
            {{0, 116, -31}, {117, 117, 134}, {118, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 65535, -3}, },
            {{0, 100, -25}, {101, 101, 135}, {102, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 104, -55}, {105, 105, 136}, {106, 65535, 1}, },
            {{0, 96, -24}, {97, 97, 137}, {98, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 100, -25}, {101, 101, 138}, {102, 65535, 1}, },
            {{0, 109, -26}, {110, 110, 139}, {111, 65535, 1}, },
            {{0, 65535, -3}, },
            {{0, 115, -23}, {116, 116, 140}, {117, 65535, 1}, },
            {{0, 110, -36}, {111, 111, 141}, {112, 65535, 1}, },
            {{0, 65535, -3}, },
        }
    };*/
 
    private static int[][] accept;
/*  {
        // NORMAL
        {34, 34, 34, 34, 33, 54, 51, 50, 37, 35, 47, 36, 38, 56, 48, 49, 44, 40, 42, 52, 53, -1, 55, 55, 55, 55, 30, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 58, 46, 39, 45, 41, 43, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 12, 55, 55, 55, 55, 55, 55, 55, 31, 55, 55, 55, 19, 55, 55, 55, 46, 46, 46, 18, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 29, 55, 55, 55, 55, 55, 55, 55, 55, 3, 32, 55, 55, 25, 55, 55, 55, 55, 55, 11, -1, 2, 55, 55, 55, 8, 10, 55, 55, 27, 55, 55, 5, 55, 55, 55, 6, 55, 55, 21, 55, -1, -1, -1, 55, 55, 55, 13, 55, 55, 22, 7, 23, 55, 55, 55, 55, -1, -1, 20, 55, 1, 55, 55, 17, 55, 55, 55, 9, -1, -1, 14, 26, 55, 55, 55, 15, -1, -1, 0, 28, 55, -1, -1, 4, 24, -1, -1, 16, },
        // COMMENT
        {34, 60, 34, 34, 34, 33, 54, 51, 50, 37, 35, 47, 36, 38, 48, 49, 44, 40, 42, 52, 53, 60, 60, 60, 30, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 34, 34, 59, 58, 46, 39, 45, 41, 43, 60, 60, 60, 12, 60, 60, 60, 60, 60, 60, 60, 31, 60, 60, 19, 60, 60, 46, 46, 46, 18, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 29, 60, 60, 60, 60, 60, 60, 32, 60, 60, 25, 60, 60, 60, 11, 60, 60, 60, 8, 10, 60, 27, 60, 60, 60, 60, 60, 60, 21, 60, 60, 60, 60, 60, 60, 13, 60, 22, 7, 23, 60, 60, 60, 60, 60, 20, 60, 60, 17, 60, 60, 9, 60, 60, 14, 26, 60, 15, 60, 60, 28, 60, 60, 24, 60, 60, 16, },

    };*/
 
    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }

    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
        };
    }

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }
    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }
    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }
    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                                case 0: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }
    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrograma(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPara(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFaca(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDe(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPasso(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimPara(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimEnquanto(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRepita(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAte(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFim(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimSe(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntao(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAvalie(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFimAvalie(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaso(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteiro(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaractere(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNao(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TE(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOu(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBranco(line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBrancos(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMais(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtribuicao(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDeclaracao(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiferente(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorq(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMaiorigl(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorq(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorigl(line, pos); }
    Token new46(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCmntLn(text, line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoisPontos(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoVirgula(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTipo(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParenDir(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParenEsq(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColcEsq(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColcDir(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAspa(line, pos); }
    Token new55(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new56(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNInt(text, line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlank(text, line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentEnd(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new60(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentBody(text, line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }

    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }

    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TValor(line, pos); }

    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLeia(line, pos); }

    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEscreva(line, pos); }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }
}
